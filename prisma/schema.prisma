generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String        @id @default(cuid())
  username      String?       @unique
  email         String?       @unique
  emailVerified DateTime?
  password      String
  image         String?
  role          String?
  address       String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  CareSession   CareSession[]
  sessions      Session[]
}

model CareSession {
  id                Int     @id @default(autoincrement())
  sessionId         String  @unique @default(cuid())
  author            User    @relation(fields: [authorId], references: [id])
  authorId          String // relation scalar field  (used in the `@relation` attribute above)
  name              String?
  title             String?
  address           String?
  medicalNotes      String?
  overview          String?
  sessionType       String?
  hourlyRate        Int?
  totalHours        Int?
  totalCompensation Int?
  slug              String
  // NEW
  acceptedCaregiverId String
  // END NEW
  @@unique([slug])
  @@index([authorId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model PotentialCaregiver {
  id            String   @id @default(cuid())
  careSessionId String   @unique
  userId        String
  status        String // could be "pending", "accepted", "rejected"
  appliedAt     DateTime @default(now())

  @@index([careSessionId, userId], name: "careSession_user")
}
