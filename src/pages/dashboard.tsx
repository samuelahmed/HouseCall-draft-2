import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { signOut, useSession } from "next-auth/react";

import { trpc } from "@/utils/trpc";
import { getServerAuthSession } from "@/server/common/get-server-auth-session";
import Layout from "@/components/layout/Layout";
import NavLayout from "@/components/layout/navLayout";

const Dashboard: NextPage = () => {
  const session = useSession();
  const secret = trpc.protected.getSecretMessage.useQuery();
  const { data, isLoading } = trpc.updateAccount.getOne.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavLayout />

      <Layout>
        <div className="grid min-h-screen justify-items-center dark:bg-gray-800">
          {/* < TabsEngine /> */}
          <div className="radius flex flex-col items-center gap-2 border p-4">
            <h1 className="text-lg">Dashboard - Protected</h1>
            <div className="col-span-4 col-start-2">
                Name:
                {isLoading || (data && data?.username) || (
                  <span className="text-red-600">Meow! No Name</span>
                )}
              </div>
            <p>{JSON.stringify(session)}</p>
            <p>{secret.data ? secret.data : "Loading tRPC query..."}</p>
            <button
              onClick={() => signOut()}
              className="rounded border py-1 px-4"
            >
              Logout
            </button>
          </div>
        </div>
      </Layout>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getServerAuthSession({
    req: context.req,
    res: context.res,
  });

  if (!session) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  return { props: {} };
};

export default Dashboard;
